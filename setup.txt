# Some notes on deploying a new Chartup site
# Should work on fresh DigitalOcean Ubuntu 12.04.3 x64 droplet or hashicorp/x64 Vagrant box
# "##" signifies actions that should be taken away from command line
# CAUTION: DO NOT RUN THIS FILE AS A SCRIPT

sudo apt-get update
sudo apt-get install curl nodejs libpq-dev git emacs23-nox libcurl4-openssl-dev

#Install RVM. Use Ruby 2.1.1
\curl -L https://get.rvm.io | bash -s stable --ruby
source ~/.rvm/scripts/rvm
rvm install 2.1.1
rvm use 2.1.1
rvm --default 2.1.1

echo "gem: --no-document" >> ~/.gemrc

#Update default gems
rvm gemset use global
gem update


#Install Rails 4.1
rvm use ruby-2.1.1@rails4.1 --create
gem install rails --version=4.1

#Set up Chartup project
ssh-keygen -t rsa -C $EMAIL_ADDRESS
eval "$(ssh-agent)"
ssh-add ~/.ssh/id_rsa

cd $YOUR_DEPLOYMENT_PATH
## Make sure to add SSH key to Github
git clone git@github.com:arthurthefourth/chartup_rails.git
cd chartup_rails
bundle install

#Lilypond
curl -O http://download.linuxaudio.org/lilypond/binaries/linux-64/lilypond-2.18.2-1.linux-64.sh
sudo sh lilypond-2.18.2-1.linux-64.sh
rm lilypond-2.18.2-1.linux-64.sh

# Nginx and Passenger

# If machine has low RAM
	sudo dd if=/dev/zero of=/swap bs=1M count=1024
	sudo mkswap /swap
	sudo swapon /swap

gem install passenger
rvmsudo passenger-install-nginx-module

# Download nginx startup script
wget -O init-deb.sh http://library.linode.com/assets/660-init-deb.sh

# Move the script to the init.d directory & make executable
sudo mv init-deb.sh /etc/init.d/nginx
sudo chmod +x /etc/init.d/nginx

#Configure nginx in /opt/nginx/nginx.conf
	server { 
	listen 80; 
	server_name example.com; 
	passenger_enabled on; 
	root /path/to/chartup_rails/public; 
	}

# Add nginx to the system startup
sudo /usr/sbin/update-rc.d -f nginx defaults
sudo service nginx start 

mkdir downloads
## Deploy secrets.yml somehow

#In production
RAILS_ENV=production rake db:create db:schema:load
RAILS_ENV=production bundle exec rake assets:precompile
#bundle exec rails server -e production

#NewRelic Setup (As root)
echo deb http://apt.newrelic.com/debian/ newrelic non-free >> /etc/apt/sources.list.d/newrelic.list
wget -O- https://download.newrelic.com/548C16BF.gpg | apt-key add -
apt-get update
apt-get install newrelic-sysmond
nrsysmond-config --set license_key=$NEW_RELIC_LICENSE_KEY
/etc/init.d/newrelic-sysmond start

#Production DB Backup
gem install backup
backup generate:model --trigger production_backup --archives --storages="s3" --encryptor="openssl" --compressor="gzip"

## Deploy ~/Backup/models/production_backup.rb

#Schedule backups
gem install whenever
cd ~
mkdir config # required by wheneverize
wheneverize

## Edit/deploy ~/config/schedule.rb
whenever --update-crontab

#SSL (as root)
cd /opt/nginx/
mkdir ssl
openssl genrsa -des3 -out server.key 2048
openssl req -new -key server.key -out server.csr
cp server.key server.key.org
openssl rsa -in server.key.org -out server.key

## Upload server.csr to CA and procure chain of CRT's
cat $SITE_CRT $OTHER_CRT $OTHER_CRT_2 > bundle.crt
mv bundle.crt /opt/nginx/ssl/

## Edit /opt/nginx/nginx.conf/

    server {
        listen       443;
        ssl on;
        server_name example.com;
        passenger_enabled on;
        root              /path/to/chartup_rails/public;
        rails_env         production;
        ssl_certificate   /opt/nginx/ssl/bundle.crt;
        ssl_certificate_key /opt/nginx/ssl/server.key;
        }
    }